// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/bloc/tv_series/watchlist_tv_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:bloc/bloc.dart' as _i10;
import 'package:dartz/dartz.dart' as _i8;
import 'package:ditonton/common/failure.dart' as _i11;
import 'package:ditonton/domain/entities/tv_entities/tv.dart' as _i12;
import 'package:ditonton/domain/entities/tv_entities/tv_detail.dart' as _i13;
import 'package:ditonton/domain/repositories/tv_repository.dart' as _i9;
import 'package:ditonton/domain/usecases/tv_usecases/get_watchlist_status_tv.dart'
    as _i3;
import 'package:ditonton/domain/usecases/tv_usecases/get_watchlist_tv.dart'
    as _i2;
import 'package:ditonton/domain/usecases/tv_usecases/remove_watchlist_tv.dart'
    as _i5;
import 'package:ditonton/domain/usecases/tv_usecases/save_watchlist_tv.dart'
    as _i4;
import 'package:ditonton/presentation/bloc_provider/tv_provider/watchlist_tv_series/watchlist_tv_series_bloc.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetWatchListTv_0 extends _i1.Fake implements _i2.GetWatchListTv {}

class _FakeGetWatchListStatusTv_1 extends _i1.Fake
    implements _i3.GetWatchListStatusTv {}

class _FakeSaveWatchListTv_2 extends _i1.Fake implements _i4.SaveWatchListTv {}

class _FakeRemoveWatchListTv_3 extends _i1.Fake
    implements _i5.RemoveWatchListTv {}

class _FakeWatchlistTvSeriesState_4 extends _i1.Fake
    implements _i6.WatchlistTvSeriesState {}

class _FakeStreamSubscription_5<T> extends _i1.Fake
    implements _i7.StreamSubscription<T> {}

class _FakeEither_6<L, R> extends _i1.Fake implements _i8.Either<L, R> {}

class _FakeTvRepository_7 extends _i1.Fake implements _i9.TvRepository {}

/// A class which mocks [WatchlistTvSeriesBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistTvSeriesBloc extends _i1.Mock
    implements _i6.WatchlistTvSeriesBloc {
  MockWatchlistTvSeriesBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetWatchListTv get getWatchListTv =>
      (super.noSuchMethod(Invocation.getter(#getWatchListTv),
          returnValue: _FakeGetWatchListTv_0()) as _i2.GetWatchListTv);
  @override
  _i3.GetWatchListStatusTv get getWatchListStatusTv => (super.noSuchMethod(
      Invocation.getter(#getWatchListStatusTv),
      returnValue: _FakeGetWatchListStatusTv_1()) as _i3.GetWatchListStatusTv);
  @override
  _i4.SaveWatchListTv get saveWatchListTv =>
      (super.noSuchMethod(Invocation.getter(#saveWatchListTv),
          returnValue: _FakeSaveWatchListTv_2()) as _i4.SaveWatchListTv);
  @override
  _i5.RemoveWatchListTv get removeWatchListTv =>
      (super.noSuchMethod(Invocation.getter(#removeWatchListTv),
          returnValue: _FakeRemoveWatchListTv_3()) as _i5.RemoveWatchListTv);
  @override
  _i6.WatchlistTvSeriesState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
              returnValue: _FakeWatchlistTvSeriesState_4())
          as _i6.WatchlistTvSeriesState);
  @override
  _i7.Stream<_i6.WatchlistTvSeriesState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i6.WatchlistTvSeriesState>.empty())
          as _i7.Stream<_i6.WatchlistTvSeriesState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i6.WatchlistTvSeriesEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i6.WatchlistTvSeriesEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  _i7.Stream<_i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>
      transformEvents(
              _i7.Stream<_i6.WatchlistTvSeriesEvent>? events,
              _i10.TransitionFunction<_i6.WatchlistTvSeriesEvent,
                      _i6.WatchlistTvSeriesState>?
                  transitionFn) =>
          (super.noSuchMethod(
              Invocation.method(#transformEvents, [events, transitionFn]),
              returnValue:
                  Stream<_i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>.empty()) as _i7
              .Stream<_i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>);
  @override
  void emit(_i6.WatchlistTvSeriesState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i6.WatchlistTvSeriesEvent>(
          _i10.EventHandler<E, _i6.WatchlistTvSeriesState>? handler,
          {_i10.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  _i7.Stream<_i6.WatchlistTvSeriesState> mapEventToState(
          _i6.WatchlistTvSeriesEvent? event) =>
      (super.noSuchMethod(Invocation.method(#mapEventToState, [event]),
              returnValue: Stream<_i6.WatchlistTvSeriesState>.empty())
          as _i7.Stream<_i6.WatchlistTvSeriesState>);
  @override
  void onTransition(
          _i10.Transition<_i6.WatchlistTvSeriesEvent,
                  _i6.WatchlistTvSeriesState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i7.Stream<_i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>
      transformTransitions(
              _i7.Stream<_i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>?
                  transitions) =>
          (super.noSuchMethod(
                  Invocation.method(#transformTransitions, [transitions]),
                  returnValue:
                      Stream<_i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>.empty())
              as _i7.Stream<
                  _i10.Transition<_i6.WatchlistTvSeriesEvent, _i6.WatchlistTvSeriesState>>);
  @override
  _i7.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.StreamSubscription<_i6.WatchlistTvSeriesState> listen(
          void Function(_i6.WatchlistTvSeriesState)? onData,
          {Function? onError,
          void Function()? onDone,
          bool? cancelOnError}) =>
      (super.noSuchMethod(
              Invocation.method(#listen, [
                onData
              ], {
                #onError: onError,
                #onDone: onDone,
                #cancelOnError: cancelOnError
              }),
              returnValue:
                  _FakeStreamSubscription_5<_i6.WatchlistTvSeriesState>())
          as _i7.StreamSubscription<_i6.WatchlistTvSeriesState>);
  @override
  void onChange(_i10.Change<_i6.WatchlistTvSeriesState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}

/// A class which mocks [GetWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListTv extends _i1.Mock implements _i2.GetWatchListTv {
  MockGetWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i8.Either<_i11.Failure, List<_i12.Tv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i8.Either<_i11.Failure, List<_i12.Tv>>>.value(
              _FakeEither_6<_i11.Failure, List<_i12.Tv>>())) as _i7
          .Future<_i8.Either<_i11.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [GetWatchListStatusTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTv extends _i1.Mock
    implements _i3.GetWatchListStatusTv {
  MockGetWatchListStatusTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.TvRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
          returnValue: _FakeTvRepository_7()) as _i9.TvRepository);
  @override
  _i7.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
}

/// A class which mocks [SaveWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchListTv extends _i1.Mock implements _i4.SaveWatchListTv {
  MockSaveWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.TvRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
          returnValue: _FakeTvRepository_7()) as _i9.TvRepository);
  @override
  _i7.Future<_i8.Either<_i11.Failure, String>> execute(
          _i13.TvDetail? tvDetail) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvDetail]),
              returnValue: Future<_i8.Either<_i11.Failure, String>>.value(
                  _FakeEither_6<_i11.Failure, String>()))
          as _i7.Future<_i8.Either<_i11.Failure, String>>);
}

/// A class which mocks [RemoveWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchListTv extends _i1.Mock implements _i5.RemoveWatchListTv {
  MockRemoveWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.TvRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
          returnValue: _FakeTvRepository_7()) as _i9.TvRepository);
  @override
  _i7.Future<_i8.Either<_i11.Failure, String>> execute(
          _i13.TvDetail? tvDetail) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvDetail]),
              returnValue: Future<_i8.Either<_i11.Failure, String>>.value(
                  _FakeEither_6<_i11.Failure, String>()))
          as _i7.Future<_i8.Either<_i11.Failure, String>>);
}
